package au.com.machinecode.intellij.ceylon.lang;

/**
 * @author Brent Douglas <brent.n.douglas@gmail.com>
 */
public class CeylonTokenTypes {
    public static final CeylonTokenType EOF = new CeylonTokenType("EOF");
    public static final CeylonTokenType ABSTRACTED_TYPE = new CeylonTokenType("ABSTRACTED_TYPE");
    public static final CeylonTokenType ADAPTED_TYPES = new CeylonTokenType("ADAPTED_TYPES");
    public static final CeylonTokenType ADD_ASSIGN_OP = new CeylonTokenType("ADD_ASSIGN_OP");
    public static final CeylonTokenType AND_ASSIGN_OP = new CeylonTokenType("AND_ASSIGN_OP");
    public static final CeylonTokenType AND_OP = new CeylonTokenType("AND_OP");
    public static final CeylonTokenType APPLY_OP = new CeylonTokenType("APPLY_OP");
    public static final CeylonTokenType ARRAY = new CeylonTokenType("ARRAY");
    public static final CeylonTokenType ASSIGN = new CeylonTokenType("ASSIGN");
    public static final CeylonTokenType ASSIGN_OP = new CeylonTokenType("ASSIGN_OP");
    public static final CeylonTokenType BREAK = new CeylonTokenType("BREAK");
    public static final CeylonTokenType CASE_CLAUSE = new CeylonTokenType("CASE_CLAUSE");
    public static final CeylonTokenType CASE_TYPES = new CeylonTokenType("of");
    public static final CeylonTokenType CATCH_CLAUSE = new CeylonTokenType("CATCH_CLAUSE");
    public static final CeylonTokenType CHAR_LITERAL = new CeylonTokenType("CHAR_LITERAL");
    public static final CeylonTokenType CLASS_DEFINITION = new CeylonTokenType("CLASS_DEFINITION");
    public static final CeylonTokenType COMMA = new CeylonTokenType(",");
    public static final CeylonTokenType COMPARE_OP = new CeylonTokenType("COMPARE_OP");
    public static final CeylonTokenType COMPILER_ANNOTATION = new CeylonTokenType("COMPILER_ANNOTATION");
    public static final CeylonTokenType COMPLEMENT_ASSIGN_OP = new CeylonTokenType("COMPLEMENT_ASSIGN_OP");
    public static final CeylonTokenType COMPLEMENT_OP = new CeylonTokenType("COMPLEMENT_OP");
    public static final CeylonTokenType CONTINUE = new CeylonTokenType("CONTINUE");
    public static final CeylonTokenType DECREMENT_OP = new CeylonTokenType("DECREMENT_OP");
    public static final CeylonTokenType DEFAULT_OP = new CeylonTokenType("DEFAULT_OP");
    public static final CeylonTokenType DIFFERENCE_OP = new CeylonTokenType("DIFFERENCE_OP");
    public static final CeylonTokenType DIVIDE_ASSIGN_OP = new CeylonTokenType("DIVIDE_ASSIGN_OP");
    public static final CeylonTokenType DIGIT = new CeylonTokenType("DIGIT");
    public static final CeylonTokenType DIGITS = new CeylonTokenType("DIGITS");
    public static final CeylonTokenType ELLIPSIS = new CeylonTokenType("ELLIPSIS");
    public static final CeylonTokenType ELSE_CLAUSE = new CeylonTokenType("ELSE_CLAUSE");
    public static final CeylonTokenType ENTRY_OP = new CeylonTokenType("ENTRY_OP");
    public static final CeylonTokenType EQUAL_OP = new CeylonTokenType("EQUAL_OP");
    public static final CeylonTokenType EXISTS = new CeylonTokenType("EXISTS");
    public static final CeylonTokenType EXTENDS = new CeylonTokenType("EXTENDS");
    public static final CeylonTokenType ESCAPE_SEQUENCE = new CeylonTokenType("ESCAPE_SEQUENCE");
    public static final CeylonTokenType EXPONENT = new CeylonTokenType("EXPONENT");
    public static final CeylonTokenType FINALLY_CLAUSE = new CeylonTokenType("FINALLY_CLAUSE");
    public static final CeylonTokenType FLOAT_LITERAL = new CeylonTokenType("FLOAT_LITERAL");
    public static final CeylonTokenType FOR_CLAUSE = new CeylonTokenType("FOR_CLAUSE");
    public static final CeylonTokenType FUNCTION_MODIFIER = new CeylonTokenType("FUNCTION_MODIFIER");
    public static final CeylonTokenType FRACTIONAL_MAGNITUDE = new CeylonTokenType("FRACTIONAL_MAGNITUDE");
    public static final CeylonTokenType IDENTICAL_OP = new CeylonTokenType("IDENTICAL_OP");
    public static final CeylonTokenType IF_CLAUSE = new CeylonTokenType("IF_CLAUSE");
    public static final CeylonTokenType IMPORT = new CeylonTokenType("IMPORT");
    public static final CeylonTokenType INCREMENT_OP = new CeylonTokenType("INCREMENT_OP");
    public static final CeylonTokenType INDEX_OP = new CeylonTokenType("INDEX_OP");
    public static final CeylonTokenType INTERFACE_DEFINITION = new CeylonTokenType("INTERFACE_DEFINITION");
    public static final CeylonTokenType INTERSECTION_OP = new CeylonTokenType("INTERSECTION_OP");
    public static final CeylonTokenType INTERSECT_ASSIGN_OP = new CeylonTokenType("INTERSECT_ASSIGN_OP");
    public static final CeylonTokenType IN_OP = new CeylonTokenType("IN_OP");
    public static final CeylonTokenType IS_OP = new CeylonTokenType("IS_OP");
    public static final CeylonTokenType IDENTIFIER_PART = new CeylonTokenType("IDENTIFIER_PART");
    public static final CeylonTokenType IDENTIFIER_START = new CeylonTokenType("IDENTIFIER_START");
    public static final CeylonTokenType LARGER_OP = new CeylonTokenType("LARGER_OP");
    public static final CeylonTokenType LARGE_AS_OP = new CeylonTokenType("LARGE_AS_OP");
    public static final CeylonTokenType LBRACE = new CeylonTokenType("LBRACE");
    public static final CeylonTokenType LBRACKET = new CeylonTokenType("LBRACKET");
    public static final CeylonTokenType LIDENTIFIER = new CeylonTokenType("LIDENTIFIER");
    public static final CeylonTokenType LINE_COMMENT = new CeylonTokenType("LINE_COMMENT");
    public static final CeylonTokenType LPAREN = new CeylonTokenType("LPAREN");
    public static final CeylonTokenType LETTER = new CeylonTokenType("LETTER");
    public static final CeylonTokenType MEMBER_OP = new CeylonTokenType("MEMBER_OP");
    public static final CeylonTokenType MULTIPLY_ASSIGN_OP = new CeylonTokenType("MULTIPLY_ASSIGN_OP");
    public static final CeylonTokenType MULTI_COMMENT = new CeylonTokenType("MULTI_COMMENT");
    public static final CeylonTokenType MAGNITUDE = new CeylonTokenType("MAGNITUDE");
    public static final CeylonTokenType NATURAL_LITERAL = new CeylonTokenType("NATURAL_LITERAL");
    public static final CeylonTokenType NONEMPTY = new CeylonTokenType("NONEMPTY");
    public static final CeylonTokenType NOT_EQUAL_OP = new CeylonTokenType("NOT_EQUAL_OP");
    public static final CeylonTokenType NOT_OP = new CeylonTokenType("NOT_OP");
    public static final CeylonTokenType NON_CHARACTER_CHARS = new CeylonTokenType("NON_CHARACTER_CHARS");
    public static final CeylonTokenType NON_STRING_CHARS = new CeylonTokenType("NON_STRING_CHARS");
    public static final CeylonTokenType OBJECT_DEFINITION = new CeylonTokenType("OBJECT_DEFINITION");
    public static final CeylonTokenType OR_ASSIGN_OP = new CeylonTokenType("OR_ASSIGN_OP");
    public static final CeylonTokenType OR_OP = new CeylonTokenType("OR_OP");
    public static final CeylonTokenType OUT = new CeylonTokenType("OUT");
    public static final CeylonTokenType OUTER = new CeylonTokenType("OUTER");
    public static final CeylonTokenType POWER_OP = new CeylonTokenType("POWER_OP");
    public static final CeylonTokenType PRODUCT_OP = new CeylonTokenType("PRODUCT_OP");
    public static final CeylonTokenType QMARK = new CeylonTokenType("QMARK");
    public static final CeylonTokenType QUOTED_LITERAL = new CeylonTokenType("QUOTED_LITERAL");
    public static final CeylonTokenType QUOTIENT_OP = new CeylonTokenType("QUOTIENT_OP");
    public static final CeylonTokenType QUOTED_LITERAL_PART = new CeylonTokenType("QUOTED_LITERAL_PART");
    public static final CeylonTokenType RANGE_OP = new CeylonTokenType("RANGE_OP");
    public static final CeylonTokenType RBRACE = new CeylonTokenType("RBRACE");
    public static final CeylonTokenType RBRACKET = new CeylonTokenType("RBRACKET");
    public static final CeylonTokenType REMAINDER_ASSIGN_OP = new CeylonTokenType("REMAINDER_ASSIGN_OP");
    public static final CeylonTokenType REMAINDER_OP = new CeylonTokenType("REMAINDER_OP");
    public static final CeylonTokenType RETURN = new CeylonTokenType("RETURN");
    public static final CeylonTokenType RPAREN = new CeylonTokenType("RPAREN");
    public static final CeylonTokenType SAFE_INDEX_OP = new CeylonTokenType("SAFE_INDEX_OP");
    public static final CeylonTokenType SAFE_MEMBER_OP = new CeylonTokenType("SAFE_MEMBER_OP");
    public static final CeylonTokenType SATISFIES = new CeylonTokenType("SATISFIES");
    public static final CeylonTokenType SEMICOLON = new CeylonTokenType("SEMICOLON");
    public static final CeylonTokenType SMALLER_OP = new CeylonTokenType("SMALLER_OP");
    public static final CeylonTokenType SMALL_AS_OP = new CeylonTokenType("SMALL_AS_OP");
    public static final CeylonTokenType SPECIFY = new CeylonTokenType("SPECIFY");
    public static final CeylonTokenType SPREAD_OP = new CeylonTokenType("SPREAD_OP");
    public static final CeylonTokenType STRING_LITERAL = new CeylonTokenType("STRING_LITERAL");
    public static final CeylonTokenType SUBTRACT_ASSIGN_OP = new CeylonTokenType("SUBTRACT_ASSIGN_OP");
    public static final CeylonTokenType SUM_OP = new CeylonTokenType("SUM_OP");
    public static final CeylonTokenType SUPER = new CeylonTokenType("SUPER");
    public static final CeylonTokenType SWITCH_CLAUSE = new CeylonTokenType("SWITCH_CLAUSE");
    public static final CeylonTokenType STRING_PART = new CeylonTokenType("STRING_PART");
    public static final CeylonTokenType THEN_CLAUSE = new CeylonTokenType("THEN_CLAUSE");
    public static final CeylonTokenType THIS = new CeylonTokenType("this");
    public static final CeylonTokenType THROW = new CeylonTokenType("throw");
    public static final CeylonTokenType TRY_CLAUSE = new CeylonTokenType("try");
    public static final CeylonTokenType TYPE_CONSTRAINT = new CeylonTokenType("given");
    public static final CeylonTokenType UIDENTIFIER = new CeylonTokenType("UIDENTIFIER");
    public static final CeylonTokenType UNION_ASSIGN_OP = new CeylonTokenType("UNION_ASSIGN_OP");
    public static final CeylonTokenType UNION_OP = new CeylonTokenType("UNION_OP");
    public static final CeylonTokenType VALUE_MODIFIER = new CeylonTokenType("VALUE_MODIFIER");
    public static final CeylonTokenType VOID_MODIFIER = new CeylonTokenType("VOID_MODIFIER");
    public static final CeylonTokenType WHILE_CLAUSE = new CeylonTokenType("WHILE_CLAUSE");
    public static final CeylonTokenType WS = new CeylonTokenType("WS");
    public static final CeylonTokenType XOR_ASSIGN_OP = new CeylonTokenType("XOR_ASSIGN_OP");
    public static final CeylonTokenType XOR_OP = new CeylonTokenType("XOR_OP");
}
